Changelog
=========

Here you can see the full list of changes between each circleci.py release.

Version 2.0.0
-------------

.. warning::
    This release deprecates all 1.0 endpoints. If you need to continue to
    use some of the 1.0 endpoints (i.e. you are running CircleCI server and
    still have some 1.0 builders) then you should pin yourself to the 1.x
    release.

Released on $DATE

- Split off the SDK into it's own repo. It can now be found
  `here <https://github.com/levlaz/circleci_sdk>`_. This decision was made
  to reduce the complexity of this library, and decouple the development of
  the mature API wrapper from the very early stage SDK.
- Remove 1.0 features. This API wrapper no longer works with any of the
  legacy 1.0 endpoints. The specific methods that have been removed are shown
  below:

  - The Experimental module which implemented a method to retry
    a build without cache.
  - The clear_cache() method, Caches in 2.0 are immutable.
  - The add_heroku_key() method. Heroku is no longer auto configured in
    CircleCI 2.0+; this means you need to use environment variables for
    this type of configuration.


Version 1.2.2
-------------

.. note::
    What happened to 1.2.0 and 1.2.1?

    Due to a bug in the SDK, these releases has been unpublished from pypi. The
    bug was an issue in the build_singleton logic that did not exclude the
    current build, therefore putting us into an infinite loop. Ironically, I
    did not test this on CircleCI so this is why the bug was not found in
    testing. Since pypi does not allow re-publishing versions (for good reason)
    I had to unpublish 1.2.0 and 1.2.1

    In the future, I may start to use the -dev publishing model to try to verify
    this behavior ahead of time.

Released on March 10, 2019

- Add SDK module which allows folks to do intersting or complicated things
  using the API.
- Add demo modules which shows some sample usage of the API and SDK.
- Add version module which provides some helpers to get the correct version
  of circleci.py in various places.

Version 1.1.3
-------------

Released on November 19, 2018

- Fix a bug where triggering a build with parameters was not working.
  Thanks to @hush-hush for the contribution.
- Update CI configuration for CircleCI 2.1.
  Thanks to @felicianotech for the contribution.
- Added smoke tests to test out all supported versions of Python3.

Version 1.1.2
-------------

Released on August 29, 2018

- Minor patch release, which unpins the request library. Thanks to @r1b for the contribution.

Version 1.1.1
-------------

Released on October 29, 2017

- 100% Code Coverage
- Add Sphinx and upload docs to readthedocs.org
- Create CD pipeline to pypi when using git tags

- Implement additional API endpoints
    - Add Heroku Key `#18 <https://github.com/levlaz/circleci.py/issues/18>`_
    - Test Metadata `#17 <https://github.com/levlaz/circleci.py/issues/17>`_
    - Update trigger build to handle optional build parameters `#12 <https://github.com/levlaz/circleci.py/issues/12>`_
    - Get artifacts of latest build `#4 <https://github.com/levlaz/circleci.py/issues/4>`_
    - Update retry build to include retry with SSH `#5 <https://github.com/levlaz/circleci.py/issues/5>`_
    - Add ability to download artifacts `#3 <https://github.com/levlaz/circleci.py/issues/3>`_

    - Work with Env Vars
        - List `#13 <https://github.com/levlaz/circleci.py/issues/13>`_
        - Add `#14 <https://github.com/levlaz/circleci.py/issues/14>`_
        - Get `#15 <https://github.com/levlaz/circleci.py/issues/15>`_
        - Delete `#16 <https://github.com/levlaz/circleci.py/issues/16>`_

Version 1.1.0
-------------

Released on October 25, 2017

- Basic project tooling put into place.
    - Continuous Integration with CircleCI
    - Packaging and uploading to PyPI
    - Code Coverage
    - Testing with unittest

- Basic Documentation in place
- Add support for using the API with a token with both circleci.com and CircleCI Server
- Add support for most basic API endpoints that deal with projects and builds
- Add Experimental API for using API methods that are undocumented
